<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
		<aop:config proxy-target-class="true">
		</aop:config>  
	<!-- 读取属性配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"/>
		<property name="jdbcUrl" value="${jdbcUrl}"/>
		<property name="user" value="root"/>
		<property name="password" value="123456"/>
	</bean>
	
	<!-- hibernate相关信息 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置hibernate其他属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 配置hibernate的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/yang/shop/user/vo/User.hbm.xml</value>
				<value>com/yang/shop/shopowner/vo/ShopOwner.hbm.xml</value>
				<value>com/yang/shop/admin/vo/Admin.hbm.xml</value>
				<value>com/yang/shop/category/vo/FirstCategory.hbm.xml</value>
				<value>com/yang/shop/category/vo/SecondCategory.hbm.xml</value>
				<value>com/yang/shop/category/vo/ThirdCategory.hbm.xml</value>
				<value>com/yang/shop/product/vo/Product.hbm.xml</value>
				<value>com/yang/shop/area/vo/Area.hbm.xml</value>
				<value>com/yang/shop/myshop/vo/MyShop.hbm.xml</value>
				<value>com/yang/shop/product/vo/ProductPic.hbm.xml</value>
				<value>com/yang/shop/product/vo/ProductDetail.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理 -->
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- ==============Dao的配置============== -->
	<!-- 用户模块的Dao -->
	<bean id="userDao" class="com.yang.shop.user.dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 商家模块的Dao -->
	<bean id="shopOwnerDao" class="com.yang.shop.shopowner.dao.ShopOwnerDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 超级管理员模块的Dao -->
	<bean id="adminDao" class="com.yang.shop.admin.dao.AdminDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 一级分类的Dao -->
	<bean id="firstCategoryDao" class="com.yang.shop.category.dao.FirstCategoryDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 二级分类的Dao -->
	<bean id="secondCategoryDao" class="com.yang.shop.category.dao.SecondCategoryDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 商品模块的Dao -->
	<bean id="productDao" class="com.yang.shop.product.dao.ProductDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- ==============Service的配置============== -->
	<!-- 用户模块的Service -->
	<bean id="userService" class="com.yang.shop.user.service.UserService">
		<!-- 注入Dao -->
		<property name="userDao" ref="userDao"/>
	</bean>
	<!-- 商家模块的Service -->
	<bean id="shopOwnerService" class="com.yang.shop.shopowner.service.ShopOwnerService">
		<!-- 注入Dao -->
		<property name="shopOwnerDao" ref="shopOwnerDao"></property>
	</bean>
	<!-- 超级管理员模块的Service -->
	<bean id="adminService" class="com.yang.shop.admin.service.AdminService">
		<!-- 注入Dao -->
		<property name="adminDao" ref="adminDao"></property>
	</bean>
	<!-- 一级分类的Service -->
	<bean id="firstCategoryService" class="com.yang.shop.category.service.FirstCategoryService">
		<!-- 注入Dao -->
		<property name="firstCategoryDao" ref="firstCategoryDao"></property>
	</bean>
	<!-- 二级分类的Service -->
	<bean id="secondCategoryService" class="com.yang.shop.category.service.SecondCategoryService">
		<!-- 注入Dao -->
		<property name="secondCategoryDao" ref="secondCategoryDao"></property>
	</bean>
	<!-- 商品模块的Service -->
	<bean id="productService" class="com.yang.shop.product.service.ProductService">
		<!-- 注入Dao -->
		<property name="productDao" ref="productDao"></property>
	</bean>
	
	<!-- ==============Action的配置============== -->
	<!-- 首页访问Action的配置 -->
	<bean id="indexAction" class="com.yang.shop.index.action.IndexAction" scope="prototype">
		<!-- 注入一级分类的Service -->
		<property name="firstCategoryService" ref="firstCategoryService"></property>
		<!-- 注入商品模块的Service -->
		<property name="productService" ref="productService"></property>
	</bean>
	<!-- 用户模块的Action -->
	<bean id="userAction" class="com.yang.shop.user.action.UserAction" scope="prototype">
		<!-- 注入Service -->
		<property name="userService" ref="userService"/>
	</bean>
	<!-- 商家模块的Action -->
	<bean id="shopOwnerAction" class="com.yang.shop.shopowner.action.ShopOwnerAction" scope="prototype">
		<!-- 注入Service -->
		<property name="shopOwnerService" ref="shopOwnerService"></property>
	</bean>
	<!-- 超级管理员模块的Action -->
	<bean id="adminAction" class="com.yang.shop.admin.action.AdminAction" scope="prototype">
		<!-- 注入Service -->
		<property name="adminService" ref="adminService"></property>
	</bean>
	<!-- 一级分类的Action -->
	<bean id="firstCategoryAction" class="com.yang.shop.category.action.FirstCategoryAction">
		<!-- 注入Service -->
		<property name="firstCategoryService" ref="firstCategoryService"></property>
	</bean>
	<!-- 商品模块的Action -->
	<bean id="productAction" class="com.yang.shop.product.action.ProductAction">
		<!-- 注入一级分类的Service -->
		<property name="firstCategoryService" ref="firstCategoryService"></property>
		<!-- 注入二级分类的Service -->
		<property name="secondCategoryService" ref="secondCategoryService"></property>
		<!-- 注入商品模块的Service -->
		<property name="productService" ref="productService"></property>
	</bean>
</beans>